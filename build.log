In file included from common.h:1,
                 from lexer.c:5,
                 from dante.c:1:
poison.h:28:20: warning: poisoning existing macro "alloca"
   28 | #pragma GCC poison alloca
      |                    ^~~~~~
In file included from syntaxTree/syntaxTree.h:2,
                 from lexer.c:7,
                 from dante.c:1:
syntaxTree/expression.c:11:5: error: unknown type name ‘FunctionCall’
   11 |     FunctionCall *functionCall;
      |     ^~~~~~~~~~~~
syntaxTree/expression.c:12:5: error: unknown type name ‘Expression’
   12 |     Expression *expression;
      |     ^~~~~~~~~~
syntaxTree/expression.c:14:5: error: unknown type name ‘Literal’
   14 |     Literal *literal;
      |     ^~~~~~~
In file included from lexer.c:7,
                 from dante.c:1:
syntaxTree/syntaxTree.h:7:19: warning: extra tokens at end of #include directive
    7 | #include "token.c";
      |                   ^
In file included from syntaxTree/syntaxTree.h:7,
                 from lexer.c:7,
                 from dante.c:1:
syntaxTree/token.c:6:6: error: redeclaration of enumerator ‘elseifT’
    6 |      elseifT,
      |      ^~~~~~~
syntaxTree/token.c:4:6: note: previous definition of ‘elseifT’ was here
    4 |      elseifT,
      |      ^~~~~~~
syntaxTree/token.c:7:6: error: redeclaration of enumerator ‘elseT’
    7 |      elseT,
      |      ^~~~~
syntaxTree/token.c:5:6: note: previous definition of ‘elseT’ was here
    5 |      elseT,
      |      ^~~~~
syntaxTree/token.c:20:5: error: unknown type name ‘Function’
   20 |     Function * function;
      |     ^~~~~~~~
In file included from syntaxTree/syntaxTree.h:9,
                 from lexer.c:7,
                 from dante.c:1:
syntaxTree/stree.c:2:5: error: unknown type name ‘Stree’
    2 |     Stree *parent;
      |     ^~~~~
syntaxTree/stree.c:7:1: error: unknown type name ‘STree’; did you mean ‘Stree’?
    7 | STree sTreeInit(Token token, Stree *parent){
      | ^~~~~
      | Stree
syntaxTree/stree.c: In function ‘sTreeInit’:
syntaxTree/stree.c:10:14: warning: assignment to ‘int *’ from incompatible pointer type ‘Stree *’ {aka ‘struct Stree *’} [-Wincompatible-pointer-types]
   10 |     a.parent = parent;
      |              ^
syntaxTree/stree.c:11:18: error: too few arguments to function ‘arraylist_new’
   11 |     a.children = arraylist_new();
      |                  ^~~~~~~~~~~~~
In file included from lexer.c:4,
                 from dante.c:1:
utils/arraylist.c:34:12: note: declared here
   34 | ArrayList *arraylist_new(unsigned int length)
      |            ^~~~~~~~~~~~~
In file included from syntaxTree/syntaxTree.h:9,
                 from lexer.c:7,
                 from dante.c:1:
syntaxTree/stree.c: In function ‘sTreeAddChildren’:
syntaxTree/stree.c:15:25: error: ‘this’ is a pointer; did you mean to use ‘->’?
   15 |    arraylist_append(this.children, children);
      |                         ^
      |                         ->
syntaxTree/stree.c:15:36: error: incompatible type for argument 2 of ‘arraylist_append’
   15 |    arraylist_append(this.children, children);
      |                                    ^~~~~~~~
      |                                    |
      |                                    Stree {aka struct Stree}
In file included from lexer.c:4,
                 from dante.c:1:
utils/arraylist.c:133:59: note: expected ‘ArrayListValue’ {aka ‘void *’} but argument is of type ‘Stree’ {aka ‘struct Stree’}
  133 | int arraylist_append(ArrayList *arraylist, ArrayListValue data)
      |                                            ~~~~~~~~~~~~~~~^~~~
In file included from dante.c:1:
lexer.c: In function ‘lex’:
lexer.c:22:28: error: incompatible type for argument 1 of ‘sTreeInit’
   22 |     Stree init = sTreeInit(rootT, NULL);
      |                            ^~~~~
      |                            |
      |                            int
In file included from syntaxTree/syntaxTree.h:9,
                 from lexer.c:7,
                 from dante.c:1:
syntaxTree/stree.c:7:23: note: expected ‘Token’ {aka ‘struct Token’} but argument is of type ‘int’
    7 | STree sTreeInit(Token token, Stree *parent){
      |                 ~~~~~~^~~~~
In file included from dante.c:1:
lexer.c:70:17: error: ‘token’ undeclared (first use in this function); did you mean ‘Token’?
   70 |                 token.tokenType = mainT;
      |                 ^~~~~
      |                 Token
lexer.c:70:17: note: each undeclared identifier is reported only once for each function it appears in
lexer.c:71:23: error: incompatible types when assigning to type ‘Stree’ {aka ‘struct Stree’} from type ‘int’
   71 |                 *st = sTreeInit(to,&init);
      |                       ^~~~~~~~~
